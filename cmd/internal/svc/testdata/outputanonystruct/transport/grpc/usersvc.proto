/**
* Generated by go-doudou v2.4.2.
* Don't edit!
*
* Version No.: v20240926
*/
syntax = "proto3";

package usersvc;
option go_package = "github.com/unionj-cloud/go-doudou/v2/cmd/internal/svc/testdata/outputanonystruct/transport/grpc";

import "google/protobuf/struct.proto";

enum KeyboardLayout {
  UNKNOWN = 0;
  QWERTZ = 1;
  AZERTY = 2;
  QWERTY = 3;
}

message Anonystructkfvagz8uXPWVpn5z9xyjWS {
  optional string label = 1 [json_name="label"];
  optional string value = 2 [json_name="value"];
}

// 排序条件
message Order {
  optional string col = 1 [json_name="col"];
  optional string sort = 2 [json_name="sort"];
}

message Page {
  // 排序规则
  repeated Order orders = 1 [json_name="orders"];
  // 页码
  optional int32 page_no = 2 [json_name="page_no"];
  // 每页行数
  optional int32 size = 3 [json_name="size"];
  optional UserVo user = 4 [json_name="user"];
}

// 筛选条件
message PageFilter {
  // 真实姓名，前缀匹配
  optional string name = 1 [json_name="name"];
  // 所属部门ID
  optional int32 dept = 2 [json_name="dept"];
}

// 分页筛选条件
message PageQuery {
  optional PageFilter filter = 1 [json_name="filter"];
  optional Page page = 2 [json_name="page"];
  optional google.protobuf.Struct condtions = 3 [json_name="condtions"];
  optional google.protobuf.ListValue a_condtions = 4 [json_name="a_condtions"];
  repeated Anonystructkfvagz8uXPWVpn5z9xyjWS options = 5 [json_name="options"];
}

message PageRet {
  optional google.protobuf.Value items = 1 [json_name="items"];
  optional int32 page_no = 2 [json_name="page_no"];
  optional int32 page_size = 3 [json_name="page_size"];
  optional int32 total = 4 [json_name="total"];
  optional bool has_next = 5 [json_name="has_next"];
}

message UserVo {
  optional int32 id = 1 [json_name="id"];
  optional string name = 2 [json_name="name"];
  optional string phone = 3 [json_name="phone"];
  optional string dept = 4 [json_name="dept"];
}

service UsersvcService {
  // You can define your service methods as your need. Below is an example.
  rpc PageUsersRpc(PageQuery) returns (Page);
}
